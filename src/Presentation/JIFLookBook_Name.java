/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import static Presentation.JIFBookEdit.cboAutores;
import static Presentation.JIFBookEdit.cboEditorial;
import static Presentation.JIFBookEdit.cboMateria;
import static Presentation.JIFBookEdit.cboTipoLibro;
import static Presentation.JIFBookEdit.lblPortada;
import static Presentation.JIFBookEdit.txaContenidos;
import static Presentation.JIFBookEdit.txtCantPags;
import static Presentation.JIFBookEdit.txtCode;
import static Presentation.JIFBookEdit.txtIsbn;
import static Presentation.JIFBookEdit.txtLugar;
import static Presentation.JIFBookEdit.txtNombre;
import static Presentation.JIFBookEdit.txtYear;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bryyv
 */
public class JIFLookBook_Name extends javax.swing.JInternalFrame {
    DefaultTableModel modelo;
    Functions.Functions cnn = new Functions.Functions();
    JIFBookEdit bookedit;
    /**
     * Creates new form JIFLookBook_Name
     */
    public JIFLookBook_Name() {
        modelo = new DefaultTableModel(null, getColumnas());
        setFilas();
        initComponents();
    }
    
    private String[] getColumnas() {
        String columna [] = new String[]{"Código", "Título del libro", "Autor (es)", "Editorial", "Materia"};
        return columna;
    }
    
    private void setFilas() {
        try {
            String sql = "SELECT DISTINCT libro.lib_id, libro.titulo, autor.apellidos || ' ' || autor.nombres, editorial.nombre, libro.materia FROM libro, editorial, autor, escrito WHERE libro.edit_id = editorial.edit_id AND escrito.aut_id = autor.aut_id AND escrito.lib_id = libro.lib_id";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos[] = new Object[5];
            while (rs.next()) {
                for (int i = 0; i < 5; i++) {
                    datos[i] = rs.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void buscar(String texto) {
        try {
            String [] titulos = {"Código", "Título del libro", "Autor(es)", "Editorial", "Materia"};
            String sql = "SELECT DISTINCT libro.lib_id, libro.titulo, autor.apellidos || ' ' || autor.nombres, editorial.nombre, libro.materia FROM libro, editorial, autor, escrito WHERE libro.titulo LIKE '" + texto + "_%' AND escrito.aut_id = autor.aut_id AND escrito.lib_id = libro.lib_id AND libro.edit_id = editorial.edit_id";
            System.out.println(sql);
            DefaultTableModel model = new DefaultTableModel(null,titulos);
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            String [] fila = new String[5];
            while(rs.next()) {
                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getString(i + 1);
                }
                model.addRow(fila);
            }
            tbLibros.setModel(model);
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLibros = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtTitulo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Buscar por nombre de un Libro");

        jLabel1.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel1.setText("Ingresar el nombre de un Libro para buscar");

        tbLibros.setModel(modelo);
        tbLibros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbLibros.setShowVerticalLines(true);
        jScrollPane1.setViewportView(tbLibros);

        btnModificar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/editar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/volver.png"))); // NOI18N
        btnSalir.setText("Volver");
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTituloKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTituloKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTituloKeyTyped(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/buscar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtTitulo)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 100, Short.MAX_VALUE)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (bookedit == null || bookedit.isClosed()) {
            bookedit = new JIFBookEdit();
            Main.dtpMain.add(bookedit);
            Dimension ds = Main.dtpMain.getSize();
            Dimension fs = bookedit.getSize();
            bookedit.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            bookedit.show();
            bookedit.txtCode.setText(tbLibros.getValueAt(tbLibros.getSelectedRow(), 0).toString());
        try {
            String sql = "SELECT libro.titulo, autor.aut_id, autor.apellidos || ' ' || autor.nombres, editorial.nombre,"
                    + " libro.isbn, libro.portada, libro.materia, libro.lug_pub, libro.year_pub, libro.cant_pags, "
                    + "libro.tipo_libro, libro.contenidos FROM public.autor, public.editorial, public.escrito, "
                    + "public.libro WHERE editorial.edit_id = libro.edit_id AND escrito.lib_id = libro.lib_id AND "
                    + "escrito.aut_id = autor.aut_id AND libro.lib_id = '" + 
                    tbLibros.getValueAt(tbLibros.getSelectedRow(), 0).toString() + "'";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()) {
                txtNombre.setText(rs.getString(1));
                cboAutores.addItem(rs.getString(2) + "-" + rs.getString(3));
                cboEditorial.setSelectedItem(rs.getString(4));
                txtIsbn.setText(rs.getString(5));
                try {
                    ImageIcon icon = new ImageIcon(rs.getString(6));
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblPortada.getWidth(), lblPortada.getHeight(), Image.SCALE_DEFAULT));
                    lblPortada.setText(null);
                    lblPortada.setIcon(icono);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null,"Error abriendo la imagen" + e);
                }
                cboMateria.setSelectedItem(rs.getString(7));
                txtLugar.setText(rs.getString(8));
                txtYear.setText(rs.getString(9));
                txtCantPags.setText(rs.getString(10));
                txtCode.setEnabled(false);
                cboTipoLibro.setSelectedItem(rs.getString(11));
                txaContenidos.setText(rs.getString(12));
            }
        } catch (SQLException | HeadlessException e) {
            System.out.println(e.getMessage());
        }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        modelo = new DefaultTableModel(null, getColumnas());
        tbLibros.setModel(modelo);
        try {
            String sql = "SELECT DISTINCT libro.lib_id, libro.titulo, autor.apellidos || ' ' || autor.nombres, editorial.nombre, libro.materia FROM libro, editorial, autor, escrito WHERE libro.edit_id = editorial.edit_id AND escrito.aut_id = autor.aut_id AND escrito.lib_id = libro.lib_id AND libro.titulo = '" + txtTitulo.getText() + "'";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos[] = new Object[5];
            while (rs.next()) {
                for (int i = 0; i < 5; i++) {
                    datos[i] = rs.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        txtTitulo.requestFocus();
        txtTitulo.selectAll();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtTituloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnBuscar.doClick();
        }
    }//GEN-LAST:event_txtTituloKeyPressed

    private void txtTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyTyped
        char caracter = evt.getKeyChar();
        if (Character.isLowerCase(caracter)) {
            String cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
    }//GEN-LAST:event_txtTituloKeyTyped

    private void txtTituloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyReleased
        String texto = txtTitulo.getText();
        buscar(texto);
    }//GEN-LAST:event_txtTituloKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbLibros;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
