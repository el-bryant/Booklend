/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Bryyv
 */
public class JIFPrestamoLibro extends javax.swing.JInternalFrame {
DefaultTableModel modelo;
Functions.Functions cnn = new Functions.Functions();
JIFPrestamo prestamo;
int contcolumna;
static int contfila;

    /**
        modelo = new DefaultTableModel(null, getColumnas());
        setFilas();
     * Creates new form JIFPrestamoLibro
     */
    public JIFPrestamoLibro() {
        modelo = new DefaultTableModel(null, getColumnas());
        setFilas();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtLibro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLibros = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Añadir libro a pedido");

        txtLibro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLibroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLibroKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel1.setText("Escribir libro para buscar");

        tbLibros.setModel(modelo);
        tbLibros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbLibros.setShowVerticalLines(true);
        tbLibros.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbLibros);

        btnGuardar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/aceptar.png"))); // NOI18N
        btnGuardar.setText("Aceptar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/volver.png"))); // NOI18N
        btnCancelar.setText("Volver");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtLibro)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(245, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private String[] getColumnas() {
        String columna[] = new String[] {"Código", "Título", "Autor", "Editorial", "Materia"};
        return columna;
    }
    
    private void setFilas() {
        try {
            String sql = "SELECT libro.lib_id, libro.titulo, autor.apellidos || ' ' || autor.nombres, editorial.nombre, libro.materia FROM libro, autor, editorial, escrito WHERE escrito.lib_id = libro.lib_id AND escrito.aut_id = autor.aut_id AND libro.edit_id = editorial.edit_id";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos[] = new Object[5];
            while (rs.next()) {
                for (int i = 0; i < 5; i++) {
                    datos[i] = rs.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void buscar(String texto) {
        try {
            String [] titulos = {"Código", "Título del libro", "Autor(es)", "Editorial", "Materia"};
            String sql = "SELECT libro.lib_id, libro.titulo, autor.apellidos || ' ' || autor.nombres, editorial.nombre, libro.materia FROM libro, editorial, autor, escrito WHERE libro.titulo LIKE '" + texto + "_%' AND escrito.aut_id = autor.aut_id AND escrito.lib_id = libro.lib_id AND libro.edit_id = editorial.edit_id";
            System.out.println(sql);
            DefaultTableModel model = new DefaultTableModel(null,titulos);
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            String [] fila = new String[5];
            while(rs.next()) {
                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getString(i + 1);
                }
                model.addRow(fila);
            }
            tbLibros.setModel(model);
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int row = tbLibros.getSelectedRow();
        String registro[] = new String[5];
        DefaultTableModel model = (DefaultTableModel) prestamo.tbPrestamo.getModel();
        for (int i = 0; i < 5; i++) {
            registro[i] = tbLibros.getValueAt(row,i).toString();
        }
        model.addRow(registro);
        prestamo.tbpPedido.setSelectedIndex(1);
        dispose();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtLibroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLibroKeyTyped
        char caracter = evt.getKeyChar();
        if (Character.isLowerCase(caracter)) {
            String cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
    }//GEN-LAST:event_txtLibroKeyTyped

    private void txtLibroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLibroKeyReleased
        String texto = txtLibro.getText();
        buscar(texto);
    }//GEN-LAST:event_txtLibroKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbLibros;
    private javax.swing.JTextField txtLibro;
    // End of variables declaration//GEN-END:variables
}
