/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Functions.Reportes;
import static Presentation.JIFBookEdit.cboAutores;
import static Presentation.JIFBookEdit.cboEditorial;
import static Presentation.JIFBookEdit.cboMateria;
import static Presentation.JIFBookEdit.cboTipoLibro;
import static Presentation.JIFBookEdit.lblPortada;
import static Presentation.JIFBookEdit.txaContenidos;
import static Presentation.JIFBookEdit.txtCantPags;
import static Presentation.JIFBookEdit.txtCode;
import static Presentation.JIFBookEdit.txtIsbn;
import static Presentation.JIFBookEdit.txtLugar;
import static Presentation.JIFBookEdit.txtNombre;
import static Presentation.JIFBookEdit.txtYear;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bryyv
 */
public class JIFBookShow extends javax.swing.JInternalFrame {
    DefaultTableModel modelo;
    Functions.Functions cnn = new Functions.Functions();
    JIFBookAdd bookadd;
    JIFBookEdit bookedit;

    /**
     * Creates new form JIFShowBooks
     */
    public JIFBookShow() {
        modelo = new DefaultTableModel(null, getColumnas());
        setFilas();
        initComponents();
    }
    
    private String[] getColumnas() {
        String columna[] = new String[] {"Código", "Título", "Cantidad de páginas", "Año de publicación", "ISBN", "Lugar de publicación", "Tipo de libro", "Editorial", "Materia", "Autor"};
        return columna;
    }
    
    private void setFilas() {
        try {
            String sql = "SELECT DISTINCT libro.lib_id, libro.titulo, libro.cant_pags, libro.year_pub, libro.isbn, libro.lug_pub, libro.tipo_libro, editorial.nombre, materia.nombre, autor.apellidos || ' ' || autor.nombres FROM libro, editorial, materia, autor, escrito WHERE libro.edit_id = editorial.edit_id AND libro.materia = materia.nombre AND  escrito.aut_id = autor.aut_id AND escrito.lib_id = libro.lib_id";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos[] = new Object[10];
            while (rs.next()) {
                for (int i = 0; i < 10; i++) {
                    datos[i] = rs.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TbBooks = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Lista de libros");

        TbBooks.setAutoCreateRowSorter(true);
        TbBooks.setModel(modelo);
        TbBooks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TbBooks.setShowVerticalLines(true);
        jScrollPane1.setViewportView(TbBooks);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnNuevo.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/agregar.png"))); // NOI18N
        btnNuevo.setText("Agregar");
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/editar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/volver.png"))); // NOI18N
        btnSalir.setText("Volver");
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/imprimir.png"))); // NOI18N
        btnExportar.setText("PDF");
        btnExportar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        if (bookadd == null || bookadd.isClosed()) {
            bookadd = new JIFBookAdd();
            Main.dtpMain.add(bookadd);
            Dimension ds = Main.dtpMain.getSize();
            Dimension fs = bookadd.getSize();
            bookadd.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            bookadd.show();
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (bookedit == null || bookedit.isClosed()) {
            bookedit = new JIFBookEdit();
            Main.dtpMain.add(bookedit);
            Dimension ds = Main.dtpMain.getSize();
            Dimension fs = bookedit.getSize();
            bookedit.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            bookedit.show();
            bookedit.txtCode.setText(TbBooks.getValueAt(TbBooks.getSelectedRow(), 0).toString());
        try {
            String sql = "SELECT libro.titulo, autor.aut_id, autor.apellidos || ' ' || autor.nombres, editorial.nombre,"
                    + " libro.isbn, libro.portada, libro.materia, libro.lug_pub, libro.year_pub, libro.cant_pags, "
                    + "libro.tipo_libro, libro.contenidos FROM public.autor, public.editorial, public.escrito, "
                    + "public.libro WHERE editorial.edit_id = libro.edit_id AND escrito.lib_id = libro.lib_id AND "
                    + "escrito.aut_id = autor.aut_id AND libro.lib_id = '" + 
                    TbBooks.getValueAt(TbBooks.getSelectedRow(), 0).toString() + "'";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()) {
                txtNombre.setText(rs.getString(1));
                cboAutores.addItem(rs.getString(2) + "-" + rs.getString(3));
                cboEditorial.setSelectedItem(rs.getString(4));
                txtIsbn.setText(rs.getString(5));
                try {
                    ImageIcon icon = new ImageIcon(rs.getString(6));
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblPortada.getWidth(), lblPortada.getHeight(), Image.SCALE_DEFAULT));
                    lblPortada.setText(null);
                    lblPortada.setIcon(icono);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null,"Error abriendo la imagen" + e);
                }
                cboMateria.setSelectedItem(rs.getString(7));
                txtLugar.setText(rs.getString(8));
                txtYear.setText(rs.getString(9));
                txtCantPags.setText(rs.getString(10));
                txtCode.setEnabled(false);
                cboTipoLibro.setSelectedItem(rs.getString(11));
                txaContenidos.setText(rs.getString(12));
            }
        } catch (SQLException | HeadlessException e) {
            System.out.println(e.getMessage());
        }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        Reportes re = new Reportes();
        String dir_current = System.getProperty("user.dir");
        String ruta = dir_current + "/reporte/libros.jasper";
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("todos los archivos *.pdf", "pdf", "PDF"));
        int selection = fc.showSaveDialog(null);
        try {
            if (selection == JFileChooser.APPROVE_OPTION) {
                JOptionPane.showMessageDialog(null, "Esto puede tardar unos segundos, espere por favor", "Estamos generando el reporte", JOptionPane.WARNING_MESSAGE);
                File JFC = fc.getSelectedFile();
                String PATH = JFC.getAbsolutePath();
                try (PrintWriter printwriter = new PrintWriter(JFC)){
                    printwriter.print(ruta);
                } catch (HeadlessException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
                re.reportesPDF(ruta, PATH);
                if (!(PATH.endsWith(".pdf"))) {
                    File temp = new File(PATH + ".pdf");
                    JFC.renameTo(temp);
                }
                JOptionPane.showMessageDialog(null, "Documento exportado exitosamente", "Guardado exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExportarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable TbBooks;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
